# =================================================================
# Metabolic Response Clustering Analysis
# =================================================================
# This script analyzes metabolic response data by:
# 1. Clustering cells based on their kinetic parameters (k values)
# 2. Comparing metabolic responses between control and treatment groups
# 3. Generating statistical comparisons within clusters
#
# The analysis workflow:
# - Generates natural breaks in k-values to create 3 clusters
# - Categorizes both control and treatment cells into these clusters
# - Compares metabolic responses within equivalent clusters
# - Produces statistical analysis and visualizations
# =================================================================

# Load required packages
library(tidyverse)  # For data manipulation and visualization
library(readr)      # For reading CSV files
library(rowr)       # For row operations
library(MESS)       # For statistical functions
library(broom)      # For tidying statistical outputs
library(varhandle)  # For variable handling
library(classInt)   # For natural breaks classification
library(viridisLite)# For color palettes
library(gplots)     # For heatmap visualization

# Set working directory and paths
setwd("~/")  # Change this to your working directory

# Define input/output paths
input_path <- "xyz"   # Directory containing input files
output_path <- "abc"  # Directory for saving results

# =================================================================
# Generate Clusters Based on k Values
# =================================================================

# Read and sort k values
k <- read_csv(paste0(input_path,"/all k.csv")) # contains k values from all cells and all treatments
k <- k %>% arrange(desc(k))

# Generate natural breaks using Jenks optimization
breaks <- classIntervals(k$k, n = 3, style = "jenks")

# Create categories based on breaks
categories <- cut(k$k, 
                  breaks = c(-Inf, breaks$brks[-1]), 
                  labels = c("Low", "Medium", "High"))

# Partition data into clusters
partitioned_data <- split(k$k, categories)

# Extract k values for each cluster
k1 <- partitioned_data$High    # High k values
k2 <- partitioned_data$Medium  # Medium k values
k3 <- partitioned_data$Low     # Low k values

# =================================================================
# Process Control Group Data
# =================================================================

# Read control data
control <- read_csv(paste0(input_path,"/control.csv"))

# Initialize data frames for each cluster
control1 <- as.data.frame(matrix(0,nrow=0,ncol=3))  # High k cluster
control2 <- as.data.frame(matrix(0,nrow=0,ncol=3))  # Medium k cluster
control3 <- as.data.frame(matrix(0,nrow=0,ncol=3))  # Low k cluster
control_x <- control  # Working copy for processing

# Categorize control cells into clusters
for (i in 1:nrow(control)) {
  k <- as.numeric(control[i,2])
  
  # Assign to high k cluster
  if (k >= min(k1)) {
    control1 <- rbind(control1, control[i,])
    control_x <- control_x[-c(which(control_x$k==k)),]
  }
  # Assign to medium k cluster
  else if (k >= min(k2) & k < min(k1)) {
    control2 <- rbind(control2, control[i,])
    control_x <- control_x[-c(which(control_x$k==k)),]
  }
  # Assign to low k cluster
  else if (k < min(k2)) {
    control3 <- rbind(control3, control[i,])
    control_x <- control_x[-c(which(control_x$k==k)),]
  }
}

# Save clustered control data
write.csv(control1, paste0(output_path,"/control1.csv"))
write.csv(control2, paste0(output_path,"/control2.csv"))
write.csv(control3, paste0(output_path,"/control3.csv"))

# =================================================================
# Generate and Save Control Group Heatmap
# =================================================================

# Set up paths for trace data
treatment <- "control"
folder1 <- paste0(treatment,"/",treatment," pH corrected")
folder <- treatment
dir_used <- "Dropbox/Kartik/Ongoing projects/Live cell imaging analyses/Matt data/d42 pHrodo Laconic/correlations 2/"

# Read trace data
trace_table <- read_csv(paste0(dir_used,folder1,".csv"))

# Process traces by cluster
trace_table2 <- trace_table[,1:2]  # Time columns
trace_table2a <- trace_table[,c(which(colnames(trace_table) %in% control1$file))]  # High k cluster
trace_table2b <- trace_table[,c(which(colnames(trace_table) %in% control2$file))]  # Medium k cluster
trace_table2c <- trace_table[,c(which(colnames(trace_table) %in% control3$file))]  # Low k cluster

# Combine processed traces
trace_table2 <- as.data.frame(cbind(trace_table2, trace_table2a, trace_table2b, trace_table2c))

# Generate heatmap
breaks2 <- seq(min(trace_table2[,-c(1,2)]), 
               max(trace_table2[,-c(1,2)]), 
               length.out=257)
mycol <- viridis(256, alpha = 1, begin = 0, end = 1, direction = 1, option = "C")

# Save heatmap
pdf(file=paste0(output_path,"/heatmamp_controls.pdf"))
heatmap.2(as.matrix(trace_table2[,-c(1,2)]), 
          Rowv=NA, 
          Colv=NA, 
          symm=FALSE, 
          col=mycol, 
          density.info="none", 
          trace="none",
          breaks = breaks2) 
dev.off()

# Save cluster traces
write.csv(trace_table2a, paste0(output_path,"/control_cluster1_traces.csv"))
write.csv(trace_table2b, paste0(output_path,"/control_cluster2_traces.csv"))
write.csv(trace_table2c, paste0(output_path,"/control_cluster3_traces.csv"))

# =================================================================
# Process Treatment Group Data
# =================================================================

# Define treatment to analyze (lactate is given as an example, can be modified for different treatments)
treatment_x <- "lactate"

# Read treatment data
treatment <- read_csv(paste0(input_path,"/",treatment_x,".csv"))

# Initialize cluster data frames
cluster1 <- as.data.frame(matrix(0,nrow=0,ncol=3))  # High k cluster
cluster2 <- as.data.frame(matrix(0,nrow=0,ncol=3))  # Medium k cluster
cluster3 <- as.data.frame(matrix(0,nrow=0,ncol=3))  # Low k cluster

# Categorize treatment cells into clusters using same k-value breaks
for (i in 1:nrow(treatment)) {
  k <- as.numeric(treatment[i,2])
  
  # Assign to high k cluster
  if (k >= min(k1)) {
    cluster1 <- rbind(cluster1, treatment[i,])
  }
  # Assign to medium k cluster
  else if (k >= min(k2) & k < min(k1)) {
    cluster2 <- rbind(cluster2, treatment[i,])
  }
  # Assign to low k cluster
  else if (k < min(k2)) {
    cluster3 <- rbind(cluster3, treatment[i,])
  }
}

# Process treatment traces
folder1 <- paste0(treatment_x,"/",treatment_x," pH corrected")
folder <- treatment_x
trace_table <- read_csv(paste0(dir_used,folder1,".csv"))

# Extract traces by cluster
trace_table3a <- trace_table[,c(which(colnames(trace_table) %in% cluster1$file))]
trace_table3b <- trace_table[,c(which(colnames(trace_table) %in% cluster2$file))]
trace_table3c <- trace_table[,c(which(colnames(trace_table) %in% cluster3$file))]

# Save treatment cluster traces
write.csv(trace_table3a, paste0(output_path,"/",treatment_x,"_cluster1_traces.csv"))
write.csv(trace_table3b, paste0(output_path,"/",treatment_x,"_cluster2_traces.csv"))
write.csv(trace_table3c, paste0(output_path,"/",treatment_x,"_cluster3_traces.csv"))

# =================================================================
# Statistical Analysis
# =================================================================

# Perform statistical tests between control and treatment groups
# Using Wilcoxon rank sum test (Mann-Whitney U test)

# Compare within clusters
test1 <- wilcox.test(control1$`AUC_pH corrected`, cluster1$`AUC_pH corrected`)  # High k cluster
test2 <- wilcox.test(control2$`AUC_pH corrected`, cluster2$`AUC_pH corrected`)  # Medium k cluster
test3 <- wilcox.test(control3$`AUC_pH corrected`, cluster3$`AUC_pH corrected`)  # Low k cluster

# Compare overall groups
test4 <- wilcox.test(control$`AUC_pH corrected`, 
                     treatment$`AUC_pH corrected`,
                     exact = T,
                     alternative = "two.sided")

# Create output table for statistical results and cluster distributions
output_table <- as.data.frame(matrix(0,nrow=10,ncol=2))

# Store p-values
output_table[1,1] <- "overall p-value"
output_table[1,2] <- test4$p.value
output_table[2,1] <- "cluster1 p-value"
output_table[2,2] <- test1$p.value
output_table[3,1] <- "cluster2 p-value"
output_table[3,2] <- test2$p.value
output_table[4,1] <- "cluster3 p-value"
output_table[4,2] <- test3$p.value

# Calculate and store cluster fractions
# Treatment group
output_table[5,1] <- "cluster1 fraction"
output_table[5,2] <- nrow(cluster1)/nrow(treatment)
output_table[6,1] <- "cluster2 fraction"
output_table[6,2] <- nrow(cluster2)/nrow(treatment)
output_table[7,1] <- "cluster3 fraction"
output_table[7,2] <- nrow(cluster3)/nrow(treatment)

# Control group
output_table[8,1] <- "control1 fraction"
output_table[8,2] <- nrow(control1)/nrow(control)
output_table[9,1] <- "control2 fraction"
output_table[9,2] <- nrow(control2)/nrow(control)
output_table[10,1] <- "control3 fraction"
output_table[10,2] <- nrow(control3)/nrow(control)

# Save results
write.csv(output_table, paste0(output_path,"/results_",treatment_x,".csv"))

# Prepare and save additional data tables
# Combine k values and AUC values for each cluster
k_table <- cbind.fill(k1, k2, k3, fill="")
control_table <- cbind.fill(control1$`AUC_pH corrected`,
                            control2$`AUC_pH corrected`,
                            control3$`AUC_pH corrected`,
                            fill="")
treatment_table <- cbind.fill(cluster1$`AUC_pH corrected`,
                              cluster2$`AUC_pH corrected`,
                              cluster3$`AUC_pH corrected`,
                              fill="")

# Save tables
write.csv(treatment_table, paste0(output_path,"/values_",treatment_x,".csv"))
write.csv(control_table, paste0(output_path,"/values_control.csv"))
write.csv(k_table, paste0(output_path,"/k_table.csv"))

# =================================================================
# Analysis Complete
# =================================================================
# Output files include:
# 1. Cluster assignments for control and treatment groups
# 2. Trace data for each cluster
# 3. Statistical comparisons between groups
# 4. Cluster distribution analysis
# 5. Heatmap visualization of control data
# 6. Raw data tables for further analysis
# =================================================================
